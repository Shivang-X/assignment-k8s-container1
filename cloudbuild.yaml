options:
  logging: CLOUD_LOGGING_ONLY

# steps:
#   # Docker Build
#   - id: Build
#     name: "gcr.io/cloud-builders/docker"
#     entrypoint: "bash"
#     args:
#       - "-c"
#       - |
#         echo "Step 1: Building Docker image..."
#         docker build -t us-central1-docker.pkg.dev/solar-imprint-427818-r2/k8s-container1/k8s-container1:latest .
#         echo "Docker image built successfully."
#         echo "Step 2: Pushing Docker image..."
#         docker push us-central1-docker.pkg.dev/solar-imprint-427818-r2/k8s-container1/k8s-container1:latest
#         echo "Image pushed successfully."

#   # # Docker Push
#   # - id: Push
#   #   name: "gcr.io/cloud-builders/docker"
#   #   entrypoint: "bash"
#   #   args:
#   #     - "-c"
#   #     - |
#   #       echo "Step 2: Pushing Docker image..."
#   #       docker push --all-tags us-central1-docker.pkg.dev/solar-imprint-427818-r2/k8s/k8s-con1
#   #       echo "Image pushed successfully."


# Docker Build
# steps:
#   - id: Build
#     name: "gcr.io/cloud-builders/docker"
#     entrypoint: "bash"
#     args: [
#         "-c",
#         "echo 'Step 2: Building Docker image...'; \
#         us-central1-docker.pkg.dev/${PROJECT_ID}/k8s; \
#         docker build -t us-central1-docker.pkg.dev/${PROJECT_ID}/k8s/k8s-con1:${SHORT_SHA} \
#         -t us-central1-docker.pkg.dev/${PROJECT_ID}/k8s/k8s-con1:latest .; \
#         echo 'Docker image built successfully.'",
#       ]

#   # Docker Push
#   - id: Push
#     name: "gcr.io/cloud-builders/docker"
#     entrypoint: "bash"
#     args: [
#         "-c",
#         "echo 'Step 3: Pushing Docker image...'; \
#         docker push --all-tags us-central1-docker.pkg.dev/${PROJECT_ID}/k8s/k8s-con1; \
#         echo 'Image pushed successfully.'",
#       ]

steps:
- name: 'gcr.io/cloud-builders/docker'
  script: |
    docker build -t us-central1-docker.pkg.dev/$PROJECT_ID/k8s/processor:latest .
  automapSubstitutions: true

# - name: 'gcr.io/cloud-builders/gcloud'
#   args:
#     - 'container'
#     - 'clusters'
#     - 'get-credentials'
#     - 'kubernetes-assignment'
#     - '--zone=us-central1-c'
#     - '--project=$PROJECT_ID'
      
# - name: 'gcr.io/cloud-builders/kubectl'
#   entrypoint: 'bash'
#   args:
#     - '-c'
#     - |
#       if kubectl get pods -l app=processor --field-selector=status.phase=Running -o name; then
#         kubectl delete pods -l app=processor
#       else
#         echo "No existing pods found with label app=processor"
#       fi
#   env:
#       - 'CLOUDSDK_COMPUTE_REGION=us-central1-c'
#       - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
#       - 'CLOUDSDK_CONTAINER_CLUSTER=kubernetes-assignment'
#       - 'PROJECT_ID=$PROJECT_ID'
  
# - name: 'gcr.io/cloud-builders/kubectl'
#   args: ['apply', '-f', 'container2-deployment.yaml', '-f', 'container2-service.yaml']
#   env:
#       - 'CLOUDSDK_COMPUTE_REGION=us-central1-c'
#       - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
#       - 'CLOUDSDK_CONTAINER_CLUSTER=kubernetes-assignment'
#       - 'PROJECT_ID=$PROJECT_ID'

images:
- 'northamerica-northeast1-docker.pkg.dev/$PROJECT_ID/cloud-assignment/processor:latest'
